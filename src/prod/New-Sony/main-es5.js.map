{"version":3,"sources":["webpack:///src/app/pipes/imagenes-pipes.pipe.ts","webpack:///src/app/components/pagar-components/pagar-components.component.ts","webpack:///src/app/components/pagar-components/pagar-components.component.html","webpack:///src/app/components/perifericos/perifericos.component.html","webpack:///src/app/components/perifericos/perifericos.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/moviles/moviles.component.html","webpack:///src/app/components/moviles/moviles.component.ts","webpack:///src/app/components/videojuegos/videojuegos.component.html","webpack:///src/app/components/videojuegos/videojuegos.component.ts","webpack:///src/app/components/pagina-inicial-components/pagina-inicial-components.component.ts","webpack:///src/app/components/pagina-inicial-components/pagina-inicial-components.component.html","webpack:///src/app/services/productos-services.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/services/firebase.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/anadir-productos-components/anadir-productos-components.component.html","webpack:///src/app/components/anadir-productos-components/anadir-productos-components.component.ts","webpack:///src/app/components/consolas/consolas.component.html","webpack:///src/app/components/consolas/consolas.component.ts","webpack:///src/app/components/carrito-components/carrito-components.component.ts","webpack:///src/app/components/carrito-components/carrito-components.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/peticiones-api.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ImagenesPipesPipe","value","length","vfs","pdfMake","PagarComponentsComponent","servicios","serApi","metodoPagoElegido","noPagado","listaPDF","precioFinal","pdf","listaCarrito","listaCompra","metodosPago","contactForm","createFormGroup","contactFormPayPal","createFormGroupPayPal","getListaCarrito","getListaNueva","forEach","element","elemento","precio","add","fontSize","relativePosition","bold","italics","end","widths","index","nombrePDF","nombre","precioPDF","create","open","splice","required","minLength","fecha","numero","maxLength","ccv","numeroPayPal","fechaPayPal","ccvPayPal","reset","get","direccion","getCoordenadas","event","charCode","which","keyCode","PerifericosComponent","servicioProductos","toastSvc","apiService","bda","listaNuevaPrueba","identificador","i","periferico","list","valueChanges","x","tipo","listaPerifericos","push","perifericoSelected","imagen","descripcion","id","getIdentificador","getListaPerifericos","listaCarritoNombre","objetoC","setIdentificador","setListaNuevaPrueba","success","listaFiltradaPeriferico","toLocaleLowerCase","includes","toString","filtrarPeriferico","environment","production","MovilesComponent","movil","listaMoviles","movilSelected","capacidad","pixeles","getListaMoviles","listaMovilFiltrada","filtrarMovil","VideojuegosComponent","videojuego","listaVideojuegos","videojuegoSelected","tiempodejuego","getListaVideojuegos","listaFiltradaVideojuegos","juego","filtrarVideojuego","PaginaInicialComponentsComponent","ProductosServicesService","listaConsolas","coordenadas","AppComponent","title","LoginComponent","firebase","flag","mostrarInicio","isSignedIn","localStorage","getItem","email","password","onSignup","then","res","isLoggedIn","err","error","onSingin","setFlag","usuario","setUsuario","FirebaseService","firebaseAuth","router","signInWithEmailAndPassword","setItem","JSON","stringify","user","createUserWithEmailAndPassword","signOut","removeItem","navigate","console","log","setFonts","AppModule","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","forRoot","NavBarComponent","serviciosProductos","bandera","contadorCarrito","getFlag","getUsuario","AnadirProductosComponentsComponent","tiempoJuego","listaConsolasTotal","listaMovilesTotal","listaPerifericosTotal","listaVideojuegosTotal","seleccion","datos","alert","consolametidabda","tablaConsola","getListaConsola","setlistaConsolas","videojuegometidabda","setListaVideojuegos","movilemetidabda","setListaMoviles","perifericometidabda","setListaPerifericos","ConsolasComponent","consola","consolaSelected","listaFiltradaConsola","filtrarConsola","CarritoComponentsComponent","servicioCarrito","apiMapa","gestorRutas","listaNueva","geojsonFeature","type","features","mapa","container","style","center","zoom","crearMarcador","addControl","positionOptions","enableHighAccuracy","trackUserLocation","long","lat","marker","draggable","setLngLat","addTo","on","latLongFinal","getLngLat","setCoordenadas","getLatLngMapa","lng","subscribe","data","latLongFinalMostrar","place_name","index2","elementoEliminar","vacio","routes","path","component","AppRoutingModule","PeticionesApiService","http","pipe","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'imagenesPipes',\n})\nexport class ImagenesPipesPipe implements PipeTransform {\n  transform(value: string, ...args: unknown[]): string {\n    if (value.length > 0) {\n      return value;\n    }\n    return 'assets/images/defecto.png';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { PdfMakeWrapper, Table, Txt } from 'pdfmake-wrapper';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n@Component({\n  selector: 'app-pagar-components',\n  templateUrl: './pagar-components.component.html',\n  styleUrls: ['./pagar-components.component.css'],\n})\nexport class PagarComponentsComponent implements OnInit {\n  direccion: any;\n\n  metodosPago;\n  metodoPagoElegido: string = '0';\n  noPagado: boolean = true;\n\n  listaPDF: any[] = [];\n  precioFinal: number = 0;\n\n\n  nombrePDF: string;\n  precioPDF: number;\n  pdf = new PdfMakeWrapper();\n\n  contactForm: FormGroup;\n  contactFormPayPal: FormGroup;\n\n  listaCarrito:any[]=[];\n  listaCompra:any[]=[];\n\n  constructor(\n    private servicios: ProductosServicesService,\n    private serApi: PeticionesApiService\n  ) {\n    this.metodosPago = ['Tarjeta de credito', 'PayPal'];\n    this.contactForm = this.createFormGroup();\n    this.contactFormPayPal = this.createFormGroupPayPal();\n  }\n  ngOnInit(): void {\n    this.listaCarrito = this.servicios.getListaCarrito();\n    this.listaCompra = this.servicios.getListaNueva();\n    this.listaPDF = this.servicios.getListaNueva();\n\n    this.listaPDF.forEach((element) => {\n      element.forEach((elemento) => {\n        this.precioFinal += elemento.precio;\n      });\n    });\n  }\n  generarPDF() {\n    this.pdf.add(\n      new Txt('Gracias por comprar con NEW SONY')\n        .fontSize(19)\n        .relativePosition(100, -25)\n        .bold()\n        .italics().end\n    );\n    this.pdf.add(new Txt('Resumen del pedido:').end);\n    this.pdf.add(\n      new Table([['NOMBRE', 'PRECIO']]).widths([260, 240]).bold().end\n    );\n    for (let index = 0; index < this.listaPDF.length; index++) {\n      const element = this.listaPDF[index];\n      for (let index = 0; index < element.length; index++) {\n        const elemento = element[index];\n        this.nombrePDF = elemento.nombre;\n        this.precioPDF = elemento.precio;\n        this.pdf.add(\n          new Table([[this.nombrePDF, this.precioPDF + '€']])\n            .widths([260, 240])\n            .bold().end\n        );\n      }\n    }\n    this.pdf.add(\n      new Table([[' ', 'Precio Total:' + this.precioFinal + '€']])\n        .widths([260, 240])\n        .bold().end\n    );\n    this.pdf.create().open();\n\n    for (let index = 0; index < this.listaCarrito.length; index++) {\n      const element = this.listaCarrito[index];\n      this.listaCarrito.splice(index,this.listaCarrito.length);\n      this.listaCompra.splice(index,this.listaCompra.length);\n    }\n  }\n  createFormGroup() {\n    return new FormGroup({\n      nombre: new FormControl('', [\n        Validators.required,\n        Validators.minLength(15),\n      ]),\n      fecha: new FormControl('',[\n        Validators.required\n      ]),\n      numero: new FormControl('', [\n        Validators.required,\n        Validators.minLength(16),\n        Validators.maxLength(16),\n      ]),\n      ccv: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(3),\n        Validators.minLength(3),\n      ]),\n    });\n  }\n\n  createFormGroupPayPal() {\n    return new FormGroup({\n      numeroPayPal: new FormControl('', [\n        Validators.required,\n        Validators.minLength(16),\n        Validators.maxLength(16),\n      ]),\n      fechaPayPal: new FormControl('',[\n        Validators.required\n      ]),\n      ccvPayPal: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(3),\n        Validators.minLength(3),\n      ]),\n    });\n  }\n\n  borrar(){\n    for (let index = 0; index < this.listaCarrito.length; index++) {\n      const element = this.listaCarrito[index];\n      this.listaCarrito.splice(index,this.listaCarrito.length);\n      this.listaCompra.splice(index,this.listaCompra.length);\n    }\n  }º\n\n  onResetForm() {\n    this.contactForm.reset();\n    this.contactFormPayPal.reset()\n  }\n\n  get nombre() {\n    return this.contactForm.get('nombre');\n  }\n  get fecha() {\n    return this.contactForm.get('fecha');\n  }\n  get numero() {\n    return this.contactForm.get('numero');\n  }\n  get ccv() {\n    return this.contactForm.get('ccv');\n  }\n\n\n  get fechaPayPal() {\n    return this.contactFormPayPal.get('fechaPayPal');\n  }\n  get numeroPayPal() {\n    return this.contactFormPayPal.get('numeroPayPal');\n  }\n  get ccvPayPal() {\n    return this.contactFormPayPal.get('ccvPayPal');\n  }\n  \n  pagarDef() {\n    this.noPagado = false;\n    this.direccion = this.servicios.getCoordenadas();\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div *ngIf=\"noPagado\">\r\n  <label id=\"label\">Elija metodo de pago</label>\r\n  <select [(ngModel)]=\"metodoPagoElegido\" class=\"form-select\" id=\"eleccion\">\r\n    <option *ngFor=\"let item of metodosPago\">\r\n      {{ item }}\r\n    </option>\r\n  </select>\r\n  <button\r\n    id=\"botonVolvere\"\r\n    class=\"btn btn-primary\"\r\n    [routerLink]=\"['/carrito']\"\r\n    routerLinkActive=\"router-link-active\"\r\n  >\r\n    Volver al carrito\r\n  </button>\r\n\r\n  <div id=\"visarow\" *ngIf=\"metodoPagoElegido == metodosPago[0]\">\r\n    <div class=\"form-container\">\r\n      <h2>VISA</h2>\r\n      <form [formGroup]=\"contactForm\">\r\n        <label>Nombre del titular:</label\r\n        ><input\r\n          type=\"text\"\r\n          formControlName=\"nombre\"\r\n          placeholder=\" nombre\"\r\n          required\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          *ngIf=\"nombre.invalid && (nombre.dirty || nombre.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"nombre.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n          <div class=\"container-error-message\" *ngIf=\"nombre.errors.minlength\">\r\n            El nombre como minimo tiene que tener 15 caracteres\r\n          </div>\r\n        </div>\r\n        <label>Fecha de caducidad:</label><br /><input\r\n          type=\"date\"\r\n          formControlName=\"fecha\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\" id=\"alertaTodosTop\"\r\n          *ngIf=\"fecha.invalid && (fecha.dirty || fecha.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"fecha.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n        </div>\r\n        <div id=\"ccvVisaTop\"> \r\n        <label>Numero de la tarjeta:</label\r\n        ><input\r\n          (keypress)=\"numberOnly($event)\"\r\n          type=\"text\"\r\n          formControlName=\"numero\"\r\n          placeholder=\" numero tarjeta\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          *ngIf=\"numero.invalid && (numero.dirty || numero.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"numero.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n          <div\r\n            class=\"container-error-message\"\r\n            *ngIf=\"numero.errors.minlength || numero.errors.maxlength\"\r\n          >\r\n            El numero de la tarjeta debe contener 16 digitos\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <label>CCV:</label><br /><input\r\n          maxlength=\"3\"\r\n          (keypress)=\"numberOnly($event)\"\r\n          type=\"password\"\r\n          formControlName=\"ccv\"\r\n          placeholder=\" CCV\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\" id=\"alertaTodosTop\"\r\n          *ngIf=\"ccv.invalid && (ccv.dirty || ccv.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"ccv.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n          <div\r\n            class=\"container-error-message\"\r\n            *ngIf=\"ccv.errors.maxlength || ccv.errors.minlength\"\r\n          >\r\n            El ccv debe contener solo 3 digitos\r\n          </div>\r\n        </div>\r\n        <button\r\n          (click)=\"pagarDef()\"\r\n          type=\"submit\"\r\n          class=\"btn-send\"\r\n          [disabled]=\"!contactForm.valid\"\r\n        >\r\n          Pagar\r\n        </button>\r\n        <button\r\n          id=\"botonVolver\"\r\n          class=\"btn-send\"\r\n          [routerLink]=\"['/carrito']\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          Volver al carrito\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  \r\n  <div id=\"paypalrow\" *ngIf=\"metodoPagoElegido == metodosPago[1]\">\r\n    <div class=\"form-container\">\r\n      <h2>PAYPAL</h2>\r\n      <form [formGroup]=\"contactFormPayPal\">\r\n        <label>Numero de PayPal:</label\r\n          ><input\r\n            (keypress)=\"numberOnly($event)\"\r\n            type=\"text\"\r\n            formControlName=\"numeroPayPal\"\r\n            placeholder=\" numero paypal\"\r\n          />\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            *ngIf=\"numeroPayPal.invalid && (numeroPayPal.dirty || numeroPayPal.touched)\"\r\n          >\r\n            <div class=\"container-error-message\" *ngIf=\"numeroPayPal.errors.required\">\r\n              Campo obligatorio\r\n            </div>\r\n            <div\r\n              class=\"container-error-message\"\r\n              *ngIf=\"numeroPayPal.errors.minlength || numeroPayPal.errors.maxlength\"\r\n            >\r\n              El numero de la tarjeta debe contener 16 digitos\r\n            </div>\r\n          </div>\r\n        <label>Fecha de caducidad:</label><br/><input\r\n          type=\"date\"\r\n          formControlName=\"fechaPayPal\"\r\n        /> <br>\r\n        <div\r\n          class=\"alert alert-danger\" id=\"alertaTodosTop\"\r\n          *ngIf=\"fechaPayPal.invalid && (fechaPayPal.dirty || fechaPayPal.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"fechaPayPal.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n        </div>\r\n        <div id=\"ccvPayPalTop\"> \r\n        <label>CCV:</label><br/><input\r\n          (keypress)=\"numberOnly($event)\"\r\n          type=\"password\"\r\n          formControlName=\"ccvPayPal\"\r\n          placeholder=\" CCV\"\r\n          maxlength=\"3\"\r\n        /><br>\r\n        <div\r\n          class=\"alert alert-danger\" id=\"alertaTodosTop\"\r\n          *ngIf=\"ccvPayPal.invalid && (ccvPayPal.dirty || ccvPayPal.touched)\"\r\n        >\r\n          <div class=\"container-error-message\" *ngIf=\"ccvPayPal.errors.required\">\r\n            Campo obligatorio\r\n          </div>\r\n          <div\r\n            class=\"container-error-message\"\r\n            *ngIf=\"ccvPayPal.errors.maxlength || ccvPayPal.errors.minlength\"\r\n          >\r\n            El ccv debe contener solo 3 digitos\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <button (click)=\"pagarDef()\" type=\"submit\" class=\"btn-send\"[disabled]=\"!contactFormPayPal.valid\">\r\n          Pagar\r\n        </button>\r\n        <button\r\n          id=\"botonVolver\"\r\n          class=\"btn-send\"\r\n          [routerLink]=\"['/carrito']\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          Volver al carrito\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div id=\"pagado\" *ngIf=\"!noPagado\">\r\n  <br>\r\n  <div class=\"row\">\r\n  <h2 style=\"color:limegreen;font-size: 40px;\">PAGADO</h2>\r\n  <h2 style=\"color: white\">\r\n    El envio se enviará a esta direccion: {{ direccion }},gracias por confiar en nosotros.\r\n  </h2>\r\n    <h2 style=\"color: white\">¿Desea un ticket de su compra?</h2>\r\n    <button   id=\"centrarSalir\" (click)=\"generarPDF()\" type=\"submit\" style=\"height:15%; width: 15%;\" class=\"btn btn-primary\">\r\n      Generar ticket de compra\r\n    </button>\r\n    <br>\r\n    <br>\r\n    <h2 style=\"color: white;\">Para volver al menu principal pulse al aqui</h2>\r\n    <button\r\n      style=\"height:15%; width: 15%;\"\r\n      id=\"centrarSalir\"\r\n      (click)=\"borrar()\"\r\n      [routerLink]=\"['/home']\"\r\n      routerLinkActive=\"active\"\r\n      class=\"btn btn-primary\">\r\n      Volver al menu principal\r\n    </button>\r\n    <div class=\"col\" id=\"imagen_pagado\">\r\n      <img id=\"imagen_pagado\" src=\"../assets/images/pagadoporfin.webp\" alt=\"imagen_pagado\">   \r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"row\" id=\"filtrarVidejuegos\">\n  <div class=\"col\"></div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Nombre</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el nombre del periferico\" #inputNombre>\n  </div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Precio</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el precio del periferico\" #inputPrecio>\n  </div>\n <div class=\"col\">\n   <button class=\"btn btn-primary\" id=\"botonFiltrar\" (click)=\"filtrarPeriferico(inputNombre.value,inputPrecio.value)\">Buscar</button>\n  </div>\n</div>\n  <div [ngSwitch]=\"listaFiltradaPeriferico.length\">\n    <div *ngSwitchCase=\"0\">\n      <div class=\"alert alert-secondary\" id=\"alertNohay\" role=\"alert\">\n       No hay perifericos\n      </div>\n    </div>\n    <div *ngSwitchDefault>     \n      <div class=\"row\" id=\"rowVideojuegos\">\n      <div class=\"col\" *ngFor=\"let item of listaFiltradaPeriferico\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <img [src]=\"item.imagen|imagenesPipes\" class=\"card-img-top\" alt=\"imagen_vegetal\"\n          style=\"height: 18rem; width: 18rem;\">\n            <ul class=\"list-group list-group-flush\">\n            <h3 class=\"card-title\" id=\"nombrePro\">{{item.nombre}}</h3>\n            </ul>\n            <ul>\n            <h3 class=\"card-text\" id=\"descripcionPro\" >{{item.descripcion}}</h3>\n          </ul>  \n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Precio:{{item.precio}}€</h4></li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-primary\" style=\"width: 250px;height: 46px;\" (click)=\"agregarCarrito(item.nombre)\">Agregar carrito</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { Periferico } from 'src/assets/utils/Periferico';\n\n@Component({\n  selector: 'app-perifericos',\n  templateUrl: './perifericos.component.html',\n  styleUrls: ['./perifericos.component.css'],\n})\nexport class PerifericosComponent implements OnInit {\n\n  periferico:Observable<any[]> | undefined; //observable donde iran todos los elementos de la base de datos\n  listaPerifericos: Periferico[];\n\n  identificador:number;\n  constructor(\n    public servicioProductos: ProductosServicesService,\n    private toastSvc: ToastrService,\n    private apiService: PeticionesApiService,\n    private bda:AngularFireDatabase\n  ) {this.identificador = 0} //en el constructor se mete la variable servicio porque sino no tenemos acceso a todos los datos porque los objetos creados estan en los servicios\n\n\n  listaCarritoNombre: any[]; //creamos 3 variables,, la primera se rellenara con la lista de VIDEOJUEGOS de los servicios, la segunda sera la lista del carrito que SOLO tendra NOMBRE y tambien la tenemos que crear en los servicios para que desde ahi poder comunicarla con todas las demás\n  listaNuevaPrueba: any[] = []; //y la usaremos para poner el numerito de datos que tenemos en el carrito y luego la tercera se rellenara con IMAGEN Y PRECIO que luego juntaremos en un futuro en una unica lista para el pago final\n  perifericoSelected:Periferico;\n  listaFiltradaPeriferico:Periferico[];\n\n  ngOnInit(): void {\n\n    var i = 0; // variable usada para hacer un ++ tantas veces como elementos en la base de datos haya y se inicializa a 0 cada vez quye salimos porque sino se repite y se añadirian otrea vez los mismos elementos x2 y con esto lo controlamos \n    this.periferico = this.bda.list('Productos').valueChanges();  \n    this.periferico.forEach(element => {\n      element.forEach(x => { \n        if (x.tipo == \"periferico\") {\n          i++;\n        }          \n        if (this.listaPerifericos.length < i && x.tipo == \"periferico\") {\n          this.listaPerifericos.push(x);   \n        }    \n      });\n    });\n    this.perifericoSelected={\n      nombre: \"\",\n      imagen:\"\",\n      descripcion: \"\",\n      precio: 0,\n      id:0,\n      tipo:\"periferico\"\n    }\n\n    this.identificador = this.servicioProductos.getIdentificador();\n    this.listaPerifericos = this.servicioProductos.getListaPerifericos(); //lo dicho, llenamos el array que hemos creado aqui con los datos del service\n    this.listaCarritoNombre = this.servicioProductos.getListaCarrito(); //igualamos lista carritos al del servicio porque sino no va xD\n    //this.listaCarritoPrecioImagen = this.servicioProductos.getlistaCarritoPrecioImagen(); //lo mismo que lo anterior\n  }\n  agregarCarrito(nombre: string) {\n    /*\n    //pide por parametros 3 atributos uno para listaCarrito y dos para listaCarritoPrecioImagen\n    this.listaCarrito.push(nombre); //aqui pusheamos el nombre que le pasamos por el html (explicado ahi que dato pasa) para llenar el array en 1 y asi con cada dato que meta\n    this.servicioProductos.setListaCarrito = this.listaCarrito; //aqui lo que hacemos es pasar la listaCarrito desde el TS al Service de manera que sera comun con todas las clases\n\n    this.listaCarritoPrecioImagen.push(precio); //lo mismo que lo anterior\n    this.listaCarritoPrecioImagen.push(imagen); //lo mismo que lo anterior\n    this.servicioProductos.setlistaCarritoPrecioImagen = this.listaCarritoPrecioImagen; //lo mismo que lo anterior\n    */\n    this.listaCarritoNombre.push(nombre);\n    this.listaPerifericos.forEach((objetoC) => {\n      if (objetoC.nombre == nombre) {\n        this.perifericoSelected={\n          nombre: objetoC.nombre,\n          imagen: objetoC.imagen,\n          descripcion: objetoC.descripcion,\n          precio: objetoC.precio,\n          id:this.identificador,\n          tipo:objetoC.tipo\n        }\n        this.identificador++;\n        this.listaNuevaPrueba.push(this.perifericoSelected);\n      }\n    });\n    this.servicioProductos.setIdentificador = this.identificador;\n    this.servicioProductos.setListaNuevaPrueba = this.listaNuevaPrueba;\n    this.toastSvc.success('Has añadido:' + nombre);\n    this.listaNuevaPrueba = [];\n  }\n  filtrarPeriferico(nombre:string,precio:number){\n    this.listaFiltradaPeriferico=[];\n    this.listaPerifericos.forEach((periferico)=>{\n      if (periferico.nombre.toLocaleLowerCase().includes(nombre.toLocaleLowerCase())&&periferico.precio.toString().includes(precio.toString())) {\n        this.listaFiltradaPeriferico.push(periferico);\n      }\n    });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"row\" id=\"filtrarVidejuegos\">\n  <div class=\"col\"></div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Nombre</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el nombre del movil\" #inputNombre>\n  </div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Precio</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el precio del movil\" #inputPrecio>\n  </div>\n <div class=\"col\">\n   <button class=\"btn btn-primary\" id=\"botonFiltrar\" (click)=\"filtrarMovil(inputNombre.value,inputPrecio.value)\">Buscar</button>\n  </div>\n</div>\n  <div [ngSwitch]=\"listaMovilFiltrada.length\">\n    <div *ngSwitchCase=\"0\">\n      <div class=\"alert alert-secondary\" id=\"alertNohay\" role=\"alert\">\n       No hay moviles\n      </div>\n    </div>\n    <div *ngSwitchDefault>     \n      <div class=\"row\" id=\"rowVideojuegos\">\n      <div class=\"col\" *ngFor=\"let item of listaMovilFiltrada\">\n        <div class=\"card\" style=\"width: 18rem;height: auto;\">\n          <img [src]=\"item.imagen|imagenesPipes\" class=\"card-img-top\" alt=\"imagen_vegetal\"\n          style=\"height: 18rem; width: 18rem;\">\n            <ul class=\"list-group list-group-flush\">\n            <h3 class=\"card-title\" id=\"nombrePro\">{{item.nombre}}</h3>\n            </ul>\n            <ul>\n            <h3 class=\"card-text\" id=\"descripcionPro\" >{{item.descripcion}}</h3>\n          </ul>  \n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Capacidad: {{item.capacidad}}GB</h4></li>\n          </ul>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Pulgadas: {{item.pixeles}}''</h4></li>\n          </ul>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Precio: {{item.precio}}€</h4></li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-primary\" style=\"width: 250px;height: 46px;\" (click)=\"agregarCarrito(item.nombre)\">Agregar carrito</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { Movil } from 'src/assets/utils/Movil';\n\n@Component({\n  selector: 'app-moviles',\n  templateUrl: './moviles.component.html',\n  styleUrls: ['./moviles.component.css'],\n})\nexport class MovilesComponent implements OnInit {\n\n  movil:Observable<any[]> | undefined; //observable donde iran todos los elementos de la base de datos\n  listaMoviles: Movil[];\n\n  identificador:number;\n  constructor(\n    public servicioProductos: ProductosServicesService,\n    private toastSvc: ToastrService,\n    private apiService: PeticionesApiService,\n    private bda:AngularFireDatabase\n  ) {this.identificador = 0}\n  \n  listaCarritoNombre: any[]; //IGUAL QUE PERIFERICOS TS\n  listaNuevaPrueba: any[] = [];\n  movilSelected:Movil;\n  listaMovilFiltrada:Movil[];\n  \n  ngOnInit(): void {\n\n    var i = 0; // variable usada para hacer un ++ tantas veces como elementos en la base de datos haya y se inicializa a 0 cada vez quye salimos porque sino se repite y se añadirian otrea vez los mismos elementos x2 y con esto lo controlamos \n    this.movil = this.bda.list('Productos').valueChanges();  \n    this.movil.forEach(element => {\n      element.forEach(x => { \n        if (x.tipo == \"movil\") {\n          i++;\n        }          \n        if (this.listaMoviles.length < i && x.tipo == \"movil\") {\n          this.listaMoviles.push(x);   \n        }    \n      });\n    });\n    this.movilSelected={\n      nombre: \"\",\n      imagen:\"\",\n      precio: 0,\n      descripcion: \"\",\n      capacidad:0,\n      id:0,\n      tipo:\"movil\",\n      pixeles:0\n    }\n    this.identificador = this.servicioProductos.getIdentificador();\n    this.listaMoviles = this.servicioProductos.getListaMoviles();\n    this.listaCarritoNombre = this.servicioProductos.getListaCarrito();\n    //this.listaNuevaPrueba = this.servicioProductos.getlistaCarritoPrecioImagen();\n  }\n  agregarCarrito(nombre: string, precio: number, imagen: string) {\n    this.listaCarritoNombre.push(nombre);\n    this.listaMoviles.forEach((objetoC) => {\n      if (objetoC.nombre == nombre) {\n          this.movilSelected={\n          nombre: objetoC.nombre,\n          imagen: objetoC.imagen,\n          precio: objetoC.precio,\n          descripcion: objetoC.descripcion,\n          capacidad:objetoC.capacidad,\n          id:this.identificador,\n          tipo:objetoC.tipo,\n          pixeles:objetoC.pixeles\n        }\n        this.identificador++;\n        this.listaNuevaPrueba.push(this.movilSelected);\n      }\n    });\n    this.servicioProductos.setIdentificador = this.identificador;\n    this.servicioProductos.setListaNuevaPrueba = this.listaNuevaPrueba;\n    this.toastSvc.success('Has añadido:' + nombre);\n    this.listaNuevaPrueba = [];\n  }\n  filtrarMovil(nombre:string,precio:number){\n    this.listaMovilFiltrada=[];\n    this.listaMoviles.forEach((movil)=>{\n      if (movil.nombre.toLocaleLowerCase().includes(nombre.toLocaleLowerCase())&&movil.precio.toString().includes(precio.toString())) {\n        this.listaMovilFiltrada.push(movil);\n      }\n    });\n\n  }\n}\n","<div class=\"row\" id=\"filtrarVidejuegos\">\n  <div class=\"col\"></div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Nombre</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el nombre del videojuego\" #inputNombre>\n  </div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Precio</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el precio del videojuego\" #inputPrecio>\n  </div>\n <div class=\"col\">\n   <button class=\"btn btn-primary\" id=\"botonFiltrar\" (click)=\"filtrarVideojuego(inputNombre.value,inputPrecio.value)\">Buscar</button>\n  </div>\n</div>\n\n  <div [ngSwitch]=\"listaFiltradaVideojuegos.length\">\n    <div *ngSwitchCase=\"0\">\n      <div class=\"alert alert-secondary\" id=\"alertNohay\" role=\"alert\">\n       No hay videojuegos\n      </div>\n    </div>\n    <div *ngSwitchDefault>     \n      <div class=\"row\" id=\"rowVideojuegos\">\n      <div class=\"col\" *ngFor=\"let item of listaFiltradaVideojuegos\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <img [src]=\"item.imagen|imagenesPipes\" class=\"card-img-top\" alt=\"imagen_vegetal\"\n          style=\"height: 18rem; width: 18rem;\">\n          <ul class=\"list-group list-group-flush\">\n            <h3 class=\"card-title\" id=\"nombrePro\">{{item.nombre}}</h3> \n          </ul>       \n          <ul>\n          <h3 class=\"card-text\" id=\"descripcionPro\">{{item.descripcion}}</h3>\n          </ul>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Tiempo medio de juego: {{item.tiempodejuego}}H</h4></li>\n          </ul>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Precio: {{item.precio}}€</h4></li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-primary\" style=\"width: 250px;height: 46px;\" (click)=\"agregarCarrito(item.nombre)\">Agregar carrito</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { Videojuego } from 'src/assets/utils/Videojuego';\n\n@Component({\n  selector: 'app-videojuegos',\n  templateUrl: './videojuegos.component.html',\n  styleUrls: ['./videojuegos.component.css'],\n})\nexport class VideojuegosComponent implements OnInit {\n\n  videojuego:Observable<any[]> | undefined; //observable donde iran todos los elementos de la base de datos\n  //videojuegometidobda:Videojuego; // objeto que se añadira a la base de datos\n  listaVideojuegos: Videojuego[]; //array donde se rellena con los objetos que tiene el observable consola\n \n  identificador:number;\n  \n  constructor(\n    public servicioProductos: ProductosServicesService,\n    private toastSvc: ToastrService,\n    private apiService: PeticionesApiService,\n    private bda:AngularFireDatabase\n  ) {\n    //this.identificador = 0\n  }\n  listaCarritoNombre: any[];\n  listaNuevaPrueba: any[] = []; //IGUAL QUE BEBIDAS TS\n  listaFiltradaVideojuegos:Videojuego[];\n\n  videojuegoSelected:Videojuego;\n\n  ngOnInit(): void {\n    var i = 0;\n    this.videojuego = this.bda.list('Productos').valueChanges();  \n    this.videojuego.forEach(element => {\n      element.forEach(x => { \n        if (x.tipo == \"videojuego\") {\n          i++;\n        }          \n        if (this.listaVideojuegos.length < i && x.tipo == \"videojuego\") {\n          this.listaVideojuegos.push(x);   \n        }    \n      });\n    });\n\n    this.videojuegoSelected={\n      nombre: \"\",\n      descripcion: \"\",\n      imagen:\"\",\n      precio: 0,\n      tiempodejuego:0,\n      tipo:\"videojuego\",\n      id:0,\n    }\n\n    this.identificador = this.servicioProductos.getIdentificador();\n\n    this.listaVideojuegos = this.servicioProductos.getListaVideojuegos();\n    this.listaCarritoNombre = this.servicioProductos.getListaCarrito();\n    //this.listaCarritoPrecioImagen = this.servicioProductos.getlistaCarritoPrecioImagen();\n  }\n  agregarCarrito(nombre: string) {\n    /*\n     this.listaCarrito.push(nombre);\n    this.servicioProductos.setListaCarrito = this.listaCarrito;\n\n    this.listaCarritoPrecioImagen.push(precio);\n    this.listaCarritoPrecioImagen.push(imagen);\n    this.servicioProductos.setlistaCarritoPrecioImagen = this.listaCarritoPrecioImagen;\n    */\n    this.listaCarritoNombre.push(nombre);\n    this.listaVideojuegos.forEach((objetoC) => {\n      if (objetoC.nombre == nombre) {\n        //this.listaNuevaPrueba.push(objetoC);\n        this.videojuegoSelected={\n          nombre:objetoC.nombre,\n          descripcion:objetoC.descripcion,\n          imagen:objetoC.imagen,\n          precio: objetoC.precio,\n          tiempodejuego:objetoC.tiempodejuego,\n          tipo:objetoC.tipo,\n          id:this.identificador,\n        }\n        this.identificador++;\n        this.listaNuevaPrueba.push(this.videojuegoSelected);\n      }\n    });\n    this.servicioProductos.setIdentificador = this.identificador\n    this.servicioProductos.setListaNuevaPrueba = this.listaNuevaPrueba;\n    this.toastSvc.success('Has añadido:' + nombre);\n    this.listaNuevaPrueba = [];\n  }\n  filtrarVideojuego(nombre:string,precio:number){\n    this.listaFiltradaVideojuegos=[];\n    this.listaVideojuegos.forEach((juego)=>{\n      if (juego.nombre.toLocaleLowerCase().includes(nombre.toLocaleLowerCase())&&juego.precio.toString().includes(precio.toString())) {\n        this.listaFiltradaVideojuegos.push(juego);\n      }\n    });\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-pagina-inicial-components',\n  templateUrl: './pagina-inicial-components.component.html',\n  styleUrls: ['./pagina-inicial-components.component.css']\n})\nexport class PaginaInicialComponentsComponent implements OnInit {\n\n\n  constructor() {}\n  \n  ngOnInit(): void {\n    }\n   \n\n\n}\n","<div id=\"wrapper\">\n  <section id=\"seccion_titulo_principal\">\n    <h2 id=\"bienvenidos\">BIENVENIDOS A NEW SONY</h2>\n  </section>\n\n  <section id=\"seccion_presentacion\">\n    <h2 id=\"quienes\">¿QUIENES SOMOS?</h2>\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <h1>\n      PlayStation es el nombre de una serie de consolas de videojuegos creadas y\n      desarrolladas por Sony Interactive Entertainment. <br /> <br /> <br />Han estado\n      presentes en la quinta, sexta, séptima, octava y novena generación de\n      videoconsolas, la compañía promotora está actualmente en el mercado con su\n      PlayStation 5.<br /><br /> <br />\n      La marca se introdujo por primera vez el 3 de diciembre de 1994 en Japón\n      y ha desarrollado y publicado cinco videoconsolas de sobremesa, que\n      incluyen un centro de medios de comunicación y un servicio en línea,\n      posteriormente se introdujeron revistas y computadoras.<br /><br /> <br />\n      La primera consola de la serie, fue PlayStation, que también fue la\n      primera en vender 100 millones de unidades.Su sucesora, PlayStation 2,\n      es la segunda consola de la serie, y la más vendida de la historia hasta\n      la fecha, alcanzando más de 155 millones de unidades vendidas, llegando a\n      estar en el mercado por 13 años.PlayStation 3, ha vendido más de 87\n      millones de consolas en todo el mundo,3​ después le sigue PlayStation 4\n      lanzada en 2013 & 2014 con 118 millones de unidades vendidas como la\n      tercera consola en superar dicho formato Y la más reciente consola de\n      Sony, PlayStation 5, lanzada en noviembre de 2020, ha llegado a las 2,1\n      millones de unidades.\n    </h1>\n  </section>\n\n  <section id=\"seccion_vendemos\">\n    <br />    <br />\n        <h2 id=\"quienes\">¿QUE VENDEMOS?</h2>    <br />    <br />\n    <div class=\"quevendemos\">\n                <h1>-CONSOLAS</h1>    <br />    <br />\n           \n               <h1>-VIDEOJUEGOS</h1>     <br />    <br />\n           \n                <h1>-PERIFÉRICOS</h1>    <br />    <br />\n           \n                <h1>-MÓVILES</h1>     <br />    <br />\n    </div> \n  </section>\n  <section id=\"seccion_consolas\">\n    <h2 id=\"quienes\">CONSOLAS</h2>  \n    <br> <br> <br>  \n      <h2 style=\"font-size: 50px; \">PlayStation 4</h2><br>\n      <h2>Su lanzamiento fue el 15 de noviembre de 2013 en Estados Unidos y en Europa y Sudamérica fue el 29 de noviembre de 2013. Cuenta con una memoria Ram 8 veces más potente que la de la PlayStation 3. Esta consola compite con Wii U y Switch de Nintendo y Xbox One de Microsoft.</h2>\n      <br> <br> \n      <h2 style=\"font-size: 50px;\">PlayStation 5</h2>\n      <br>\n      <h2>En una entrevista con Wired en abril de 2019, Mark Cerny, declaró que Sony estaba trabajando en una quinta consola sin nombre de la marca PlayStation que serviría como entrada a la próxima generación de consolas.\n         Sin embargo, el día 8 de octubre de 2019, a través de un comunicado en el blog de Sony PlayStation, Sony hizo oficial el nombre de su consola de próxima generación, la cual será llamada PlayStation 5, la empresa a su vez,\n          afirmó que incluirá nueva tecnología y mejoras en los controles. De acuerdo con Cerny, la consola usará el procesador Ryzen de AMD con la arquitectura Zen 2 de 7 nm y con una GPU de la familia Navi de Radeon que incluye soporte para el\n           renderizado de trazado de rayos en tiempo real, y aún sería compatible con medios físicos. La nueva consola contaría con almacenamiento SSD, ya que Cerny enfatizó la necesidad de tiempos de carga rápidos y mayor\n            ancho de banda para hacer que los videojuegos sean más inmersivos, así como para admitir la transmisión de contenido requerida del disco para resoluciones gráficas de 8K. Cerny afirma que la nueva consola es \n            totalmente compatible con los títulos de PlayStation 4 y PlayStation VR, e indica que la transición a la nueva consola sería suave.Si bien es compatible con videojuegos en streaming, se espera que la consola\n            incluya algún tipo de unidad de disco óptico, para videojuegos que aún se distribuyan en dichos medios.18​ Los rumores de la industria indicaron que la declaración de Cerny coincidió con el envío del kit de\n             desarrollo de software de la futura consola a terceros para evitar más rumores. El informe financiero de Sony para el trimestre que finalizó el 31 de marzo de 2019 afirmó que se estaba desarrollando un \n             nuevo hardware de próxima generación, pero que no se vendería antes de abril de 2020.\n        Se espera que la nueva consola tenga compatibilidad intergeneracional. Eso significa que los jugadores podrán comenzar una partida de un videojuego en la PlayStation 4 o cambiar a la misma partida guardada en\n         la nueva consola y volver a cambiar también​</h2>  \n</section>\n\n  <section id=\"seccion_videojuegos\">\n    <h2 id=\"quienes\">VIDEOJUEGOS</h2>\n    <br> <br> <br>  \n      <h2 style=\"font-size: 50px; \">Ratchet & Clank </h2><br>\n      <h2>Es otra de las sagas más populares de la marca de Playstation y de las más queridas por los fanes. Desde su estreno en PlayStation 2 ha sido muy controvertida, debido a sus escenas de sexo y violencia en cada una de sus entregas. La serie se enfoca en el género de Hack and slash, donde el jugador toma control del personaje de Kratos, siendo otro de los personajes más emblemáticos de PlayStation y de los videojuegos. La saga desde mayo de 2019, ha logrado unas ventas de 32 millones de unidades para PlayStation 2, PlayStation 3, PlayStation Vita y PlayStation 4.24​25​ La franquicia es desarrollada por SCE Santa Monica Studio.</h2>\n      <br> <br> \n      <h2 style=\"font-size: 50px;\">God of War</h2>\n      <br>\n      <h2>\n        Es conocida como la serie actual de Sony del género de Plataformas y disparos en tercera persona, más importante y conocida de Playstation. La saga gira en torno a Ratchet y su compañero Clank en sus aventuras espaciales. La serie la logrado vender cerca de 27 millones de unidades a lo largo de las consolas de PlayStation 2, PlayStation Portable, PlayStation 3, PlayStation Vita y PlayStation 4.26​ La serie fue creada por la compañía Insomniac Games.\n      </h2>  \n      <h2 style=\"font-size: 50px;\"> Gran Turismo</h2>\n      <h2>\n        Es considerada la franquicia más importante y el buque insignia de Playstation. Debido a que es la saga que más venta ha tenido con más de 80 millones de copias vendidas, durante todas las consolas de Playstation.22​ La temática de la saga es en base al género de Videojuego de carreras y simulación, en la cual el jugador deberá aprender a saber los diferentes mecanismos del auto para lograr un rendimiento eficiente. La franquicia es desarrollada por Polyphony Digital.\n      </h2>\n      <h2  style=\"font-size: 50px; \">Uncharted</h2>\n      <h2>Es una de las sagas más populares de Playstation y la que mayor premios y reconocimiento ha tenido. Las ventas de la saga que empezó desde PlayStation 3 con la trilogía original y posteriormente con nuevas entregas para PlayStation Vita y PlayStation 4, han sido de casi 42 millones de unidades vendidas para diciembre del 2017.23​ La saga se enfoca en el género de Videojuego de acción-aventura tomando control de Nathan Drake considerado por muchos fanes y críticos, como la figura más emblemática de PlayStation 3, uno de los más emblemáticos para la marca de Playstation y para el mundo de los videojuegos. La saga tiene influencias a la saga de Tomb Raider y la franquicia de películas Indiana Jones. Fue desarrollada por Naughty Dog.</h2>\n  </section>\n\n  <section id=\"seccion_perifericos\">\n    <h2 id=\"quienes\">PERIFÉRICOS</h2>\n    <br> <br>\n      <h2 style=\"font-size: 50px; \">Mando PS4</h2><br>\n      <h2>DualShock 4 fue anunciado el 20 de febrero de 2013 y fue lanzado el 15 de noviembre de 2013 junto con la PlayStation 4, en la conferencia PlayStation Meeting, junto con la confirmación de la PlayStation 4. Es el primer mando de la línea DualShock en cambiar significativamente su diseño, presentando un diseño más redondeado que sus predecesores. Presenta un panel táctil parecido al usado en la PlayStation Vita. Posee un diseño más ergonómico, junto con una barra de luz LED en su parte frontal, la cual cambia de color de acuerdo al número de jugador (Jugador 1 azul, jugador 2 rojo, jugador 3 verde, jugador 4 morado), tomando los cuatro colores de los botones emblemáticos de Playstation; además en juegos de un solo jugador se permite a los desarrolladores cambiar el color o la intensidad del LED para crear efectos relacionados con el juego, como por ejemplo cuando el jugador recibe daño. Cabe destacar que el Mando cambia a naranja cuando se conecta a cualquier dispositivo con Bluetooth o por medio de USB. Además incluye un pequeño altavoz en el centro por arriba del botón PS, dando indicios al jugador en algunos juegos, eventos significativos por medio de un sonido como golpes, apertura de puertas, estado de vida, mejorando la experiencia de inmersión en el juego.</h2>\n      <br> <br> \n      <h2 style=\"font-size: 50px;\">Mando PS5</h2>\n      <br>\n      <h2>\n        El DualSense es el mando de la PlayStation 5 y fue presentado el 7 de abril de 2020. Se basa en el controlador DualShock 4 que vino antes que él, pero con una evolución a su diseño y capacidades influenciadas por discusiones con diseñadores de juegos y jugadores.\n\n        A diferencia de los mandos DualShock anteriores, el DualSense tiene un esquema de coloración bicolor (principalmente blanco con orientación negra) y botones de acción monocromáticos, marcando la primera vez que los botones de acción para un mando PlayStation estándar no están coloreados en colores arco iris, aunque las consolas portátiles de PlayStation, PlayStation Vita y PlayStation Portable, ambos tenían botones monocromáticos. Incorpora un diseño más ergonómico que es algo más grande y redondo que el DualShock 4. La barra de luz se ha movido desde la parte superior del controlador a los bordes izquierdo y derecho del panel táctil. Mientras que el controlador mantiene el mismo número de botones que el DualShock 4, el botón \"Compartir\" se ha reemplazado por \"Crear\" con un enfoque ampliado en la creación de contenido para compartir con otros. El DualSense tiene una fuerte retroalimentación háptica a través de actuadores de bobina de voz, que están destinados a dar una mejor retroalimentación en el juego. El altavoz del controlador se ha mejorado y ahora se ve aumentado por una nueva matriz de micrófonos integrada que permite a los jugadores hablar con otros usando sólo el controlador. El controlador tiene disparadores adaptativos que pueden cambiar la resistencia al jugador según sea necesario, apoyando una experiencia como dibujar virtualmente una flecha de un arco. La conectividad incluye un conector de audio de 3,5 mm y USB-C, que reemplaza el puerto microUSB en el DualShock 4 Su batería se ha actualizado a una capacidad de mayor clasificación. Además, la pieza de plástico negro se puede quitar fácilmente, sin ningún desmontaje.\n      </h2>     \n  </section>\n\n  <section id=\"seccion_moviles\">\n    <h2 id=\"quienes\">MÓVILES</h2>\n    <br> <br> <br>  \n      <h2 style=\"font-size: 50px; \"> Xperia X1</h2><br>\n      <h2>El Sony Ericsson Xperia X1 Es un teléfono 3G, lanzado en febrero de 2008, con pantalla táctil TFT de 3 pulgadas (800 × 480 píxeles). Tiene una cámara digital de 3.2 megapíxeles con selección de foco mediante tocar la zona deseada para enfocar, graba videos en calidad VGA con 30 fps. Además su cámara tiene zoom digital y flash. Además posee una cámara frontal para videollamadas. Tiene una memoria interna de 400mb y soporte externo para microSD (TransFlash) de hasta 16 GB para una mayor capacidad. Tiene una batería con 580 horas de duración en Stand-By (tiempo de espera) y 10 horas en llamada en GSM/GPRS/EDGE, 640 horas en Stand-By y 6 horas en llamada en UMTS/HSPA. Posee reproductor Windows Media Player y Radio FM. Tiene sistema operativo Windows Mobile Professional 6.1, un procesador Qualcomm a 528MHz y 256 MB de memoria RAM, Posee a-GPS y un puerto mini-USB. Con tecnología Slide, incorpora un teclado QWERTY completo y un Optical trackpad. Envía SMS, MMS, Mensajes instantáneos y E-mails (Push email). Soporta la tecnología JAVA 2.0, y gracias a su tecnología UMTS, permite navegar con una velocidad de hasta 7.2 Mbps. Incluye WLAN Wi-Fi 802.11b/g permitiendo conectar a un hotspot local.</h2>\n      <br> <br> \n      <h2 style=\"font-size: 50px;\">Xperia X8</h2>\n      <br>\n      <h2>\n        El Sony Ericsson Xperia X8 es un teléfono inteligente 3G de gama media con Android, desarrollado por Sony Ericsson, de la serie Xperia publicado en el Q4 de 2010. Se vende en muchos países del mundo, incluyendo los Estados Unidos en AT&T Mobility y con contratos de pago módicos mensuales en el Reino Unido. Originalmente funcionaba con Android 1.6, pero se actualizó a principios de 2011 a Android 2.1.       \n      </h2> \n        <h2 style=\"font-size: 50px;\"> Xperia X2</h2>\n      <h2>\n        Sony Ericsson Xperia X2, anunciado en septiembre de 20091​ es un teléfono inteligente de la serie Xperia de la multinacional japonesa Sony Ericsson. Es el sucesor del modelo X1. Tiene una pantalla táctil de 3.2 pulgadas, teclado deslizante, cámara de 8.1 megapíxeles, Wi-Fi, GPS y 3G. Funciona con Windows Mobile 6.5 y la pantalla principal puede ser personalizada como Windows 6.5 o Xperia.\n\n        El Xperia X2 es el último teléfono inteligente de Sony Ericsson en usar el sistema operativo Windows Mobile,2​ al haber optado en su sucesor (Xperia X10) el sistema operativo Android.3​\n        \n        En abril de 2010, Sony Ericsson lanzó su primera actualización (MR1), que permitía transformar Windows Mobile de su versión 6.5.1 a la versión 6.5.2. Está actualización mejoró la estabilidad y usabilidad del dispositivo. También integró el uso de videollamada, radio FM, un GPS más rápido y muchas de las aplicaciones disponibles.\n  </h2>\n      </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { from } from 'rxjs';\nimport { Consola } from 'src/assets/utils/Consola';\nimport { Movil } from 'src/assets/utils/Movil';\nimport { Periferico } from 'src/assets/utils/Periferico';\nimport { Videojuego } from 'src/assets/utils/Videojuego';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductosServicesService {\n  constructor() {}\n  listaConsolas: Consola[] = [];\n  listaVideojuegos: Videojuego[] = [];\n  listaPerifericos: Periferico[] = [];\n  listaMoviles: Movil[] = [];\n\n  identificador:number = 0;\n\n  listaCarrito: any[] = []; //DOS LISTAS CREADAS SOLO PARA METER LAS COSAS EN EL CARRITO QUE AL FINAL SE JUNTARAN EN UNA LISTA AUN POR CREAR\n  //listaCarritoPrecioImagen: any[] = [];\n\n  listaNuevaPrueba: any[] = [];\n\n  //CREACION DE GETTER  SETTER\n\n  getListaConsola(): Consola[] {\n    return this.listaConsolas;\n  }\n\n  set setlistaConsolas(listaConsolas: Consola[]) {\n    this.listaConsolas = listaConsolas;\n  }\n\n  getIdentificador(): number {\n    return this.identificador;\n  }\n  set setIdentificador(identificador: number) {\n    this.identificador = identificador;\n  }\n\n  getListaVideojuegos(): Videojuego[] {\n    return this.listaVideojuegos;\n  }\n  set setListaVideojuegos(listaVideojuegos: Videojuego[]) {\n    this.listaVideojuegos = listaVideojuegos;\n  }\n  getListaMoviles(): Movil[] {\n    return this.listaMoviles;\n  }\n  set setListaMoviles(listaMoviles: Movil[]) {\n    this.listaMoviles = listaMoviles;\n  }\n  getListaPerifericos(): Periferico[] {\n    return this.listaPerifericos;\n  }\n  set setListaPerifericos(listaPerifericos: Periferico[]) {\n    this.listaPerifericos = listaPerifericos;\n  }\n\n  getListaCarrito(): any[] {\n    return this.listaCarrito;\n  }\n  /*\n  getlistaCarritoPrecioImagen(): any[] {\n    return this.listaCarritoPrecioImagen;\n  }\n  */\n\n  getListaNueva(): any[] {\n    return this.listaNuevaPrueba;\n  }\n\n  set setListaNuevaPrueba(listaNuevaPrueba: any[]) {\n    this.listaNuevaPrueba.push(listaNuevaPrueba);\n  }\n\n  set setListaCarrito(listaCarrito: any[]) {\n    this.listaCarrito = listaCarrito;\n  }\n\n  coordenadas: any;\n  getCoordenadas(): any[] {\n    return this.coordenadas;\n  }\n  set setCoordenadas(coordenadas: any) {\n    this.coordenadas = coordenadas;\n  }\n  /*\n  set setlistaCarritoPrecioImagen(listaCarritoPrecioImagen: any[]) {\n    this.listaCarritoPrecioImagen = listaCarritoPrecioImagen;\n  }\n  */\n}\n","import { Component, OnInit } from '@angular/core';\nimport 'firebase/firestore';\nimport { FirebaseService } from './services/firebase.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'TFG IGNACIO ARROYO MAYO';\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n \n/*\n<!-- The core Firebase JS SDK is always required and must be listed first -->\n<script src=\"/__/firebase/8.3.2/firebase-app.js\"></script>\n\n<!-- TODO: Add SDKs for Firebase products that you want to use\n     https://firebase.google.com/docs/web/setup#available-libraries -->\n<script src=\"/__/firebase/8.3.2/firebase-analytics.js\"></script>\n\n<!-- Initialize Firebase -->\n<script src=\"/__/firebase/init.js\"></script>\n*/\n","<app-login></app-login>\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","<div id=\"toop\" *ngIf=\"!isSignedIn\">\n  <!-- Este NgIf lo usamos para que no nos jorobe toda la pantalla porque estaria todo el rato detras\n     pero ocultado y nos tapa parte del body y por tanto cuando abrimos el mapa  se estropea ya que no puedo coger todo su height y width \n     y con esto hacemos que se oculte cuando YA ESTA LOGEADO -->\n  <img\n    id=\"center\"\n    src=\"../assets/images/logo_new_playstation.png\"\n    style=\"width: 30rem; height: 23rem\"\n  />\n  <div id=\"contenedorLogin\" class=\"row\">\n    <div id=\"iniciar\" *ngIf=\"!isSignedIn\">\n      <h1 id=\"login\">\n        <b><i>Bienvenidos a New Sony</i></b>\n      </h1>\n      <div>\n        <input id=\"inputlogin1\" type=\"text\" placeholder=\"Email\" #email>\n      </div>\n      <div>\n        <input\n          id=\"inputlogin2\"\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          #password\n        />\n      </div>\n      <button\n      id=\"botoneslogin2\"\n      class=\"btn btn-primary\"\n      (click)=\"onSingin(email.value, password.value)\"\n    >\n      Iniciar Sesión\n    </button>\n    <br>\n      <button\n        id=\"botoneslogin1\"\n        class=\"btn btn-primary\"\n        (click)=\"onSignup(email.value, password.value)\"\n      >\n        Registrarse\n      </button>\n      \n    </div>\n  </div>\n</div>\n<app-nav-bar *ngIf=\"isSignedIn\"></app-nav-bar>\n<router-outlet></router-outlet>\n\n<!-- <app-nav-bar></app-nav-bar>\n   <router-outlet></router-outlet> -->\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from 'src/app/services/firebase.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  usuario: string;\n  flag: boolean = false;\n  mostrarInicio: boolean = false;\n  isSignedIn = false;\n  constructor(\n    public firebase: FirebaseService,\n    private toastSvc: ToastrService\n  ) {}\n  ngOnInit() {\n    if (localStorage.getItem('user') !== null) this.isSignedIn = false;\n    else this.isSignedIn = false;\n  }\n  async onSignup(email: string, password: string) {\n    await this.firebase.onSignup(email, password).then(res=>{\n      if (this.firebase.isLoggedIn) this.isSignedIn = false;\n    }).catch(err=>{\n      this.toastSvc.error(err);\n    });\n    \n  }\n  async onSingin(email: string, password: string) {\n\n      await this.firebase.onSingin(email, password).then(res=>{\n        if (this.firebase.isLoggedIn && email == 'admin@gmail.com') {\n          this.isSignedIn = true;\n          this.flag = true; //linea 28 y 29 sirve para pasarle este parametro al navBar y saber si el que ha iniciado sesion es el admin o no si la bandera esta en true se mostrara el menu de admin\n          this.firebase.setFlag = this.flag;\n          this.usuario = email;\n          this.firebase.setUsuario = this.usuario;\n          this.toastSvc.success('Has iniciado sesion cómo  ' + this.usuario);\n        } else {\n          this.isSignedIn = true;\n          this.usuario = email;\n          this.firebase.setUsuario = this.usuario;\n          this.toastSvc.success('Has iniciado sesion cómo  ' + this.usuario);\n        }\n      }).catch(err=>{\n        this.toastSvc.error(err);\n      });\n    }\n\n  handleLogout() {\n    this.isSignedIn = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  usuario: string;\n  isLoggedIn = false;\n  flag: boolean = false; //esta flag es para saber si es modo admin o cualquier otro\n  constructor(public firebaseAuth: AngularFireAuth,public router:Router) {}\n  async onSingin(email: string, password: string) {\n    await this.firebaseAuth\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        this.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user));\n      });\n  }\n\n  async onSignup(email: string, password: string) {\n    await this.firebaseAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then((res) => {\n        this.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user));\n      });\n  }\n  set setFlag(flag: boolean) {\n    this.flag = flag;\n  }\n  getFlag(): boolean {\n    return this.flag;\n  }\n  set setUsuario(usuario: string) {\n    this.usuario = usuario;\n  }\n  getUsuario(): string {\n    return this.usuario;\n  }\n  logout(){\n    try{\n      this.firebaseAuth.signOut();\n      localStorage.removeItem('user');\n      this.router.navigate(['/home']);\n    }catch(error){\n      console.log(error);  \n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { PaginaInicialComponentsComponent } from './components/pagina-inicial-components/pagina-inicial-components.component';\nimport { AnadirProductosComponentsComponent } from './components/anadir-productos-components/anadir-productos-components.component';\nimport { CarritoComponentsComponent } from './components/carrito-components/carrito-components.component';\nimport { PagarComponentsComponent } from './components/pagar-components/pagar-components.component';\nimport { ImagenesPipesPipe } from './pipes/imagenes-pipes.pipe';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { FirebaseService } from './services/firebase.service';\nimport { ConsolasComponent } from './components/consolas/consolas.component';\nimport { VideojuegosComponent } from './components/videojuegos/videojuegos.component';\nimport { MovilesComponent } from './components/moviles/moviles.component';\nimport { PerifericosComponent } from './components/perifericos/perifericos.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport{ToastrModule}from 'ngx-toastr';\nimport { PdfMakeWrapper } from 'pdfmake-wrapper';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { LoginComponent } from './components/login/login.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n\n\nPdfMakeWrapper.setFonts(pdfFonts)\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    PaginaInicialComponentsComponent,\n    AnadirProductosComponentsComponent,\n    CarritoComponentsComponent,\n    PagarComponentsComponent,\n    ImagenesPipesPipe,\n    ConsolasComponent,\n    VideojuegosComponent,\n    MovilesComponent,\n    PerifericosComponent,\n    LoginComponent, \n  ],\n  imports: [\n    BrowserModule,\n    MatSliderModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyDvF7KLzph1C8eJqq7WDTDb_J6dUhX-7jE\",\n      authDomain: \"tfg-ignacio-arroyo.firebaseapp.com\",\n      databaseURL: \"https://tfg-ignacio-arroyo-default-rtdb.europe-west1.firebasedatabase.app\",\n      projectId: \"tfg-ignacio-arroyo\",\n      storageBucket: \"tfg-ignacio-arroyo.appspot.com\",\n      messagingSenderId: \"1048738039204\",\n      appId: \"1:1048738039204:web:a5681154d8f16845076d31\",\n      measurementId: \"G-0Q79G6FDVN\",\n  }),\n    AngularFireAnalyticsModule,\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule,\n  ],\n  providers: [FirebaseService,AngularFireAuth],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light background\" id=\"navBar\">\n  <a id=\"tituloNav\" class=\"navbar-brand\">New Sony</a>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/home']\"\n          routerLinkActive=\"active\"\n          >Home</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/consolas']\"\n          routerLinkActive=\"active\"\n          >Consolas</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/videojuegos']\"\n          routerLinkActive=\"active\"\n          >Videojuegos</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/perifericos']\"\n          routerLinkActive=\"active\"\n          >Periféricos</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/moviles']\"\n          routerLinkActive=\"active\"\n          >Móviles</a\n        >\n      </li>\n      <li *ngIf=\"bandera\" class=\"nav-item\">\n        <a\n          id=\"nombretitulosnav\"\n          class=\"nav-link\"\n          [routerLink]=\"['/anadir']\"\n          routerLinkActive=\"active\"\n          >Añadir productos</a\n        >\n      </li>\n    </ul>\n  </div>\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <a\n            class=\"nav-link\"\n            [routerLink]=\"['/carrito']\"\n            routerLinkActive=\"active\"\n            ><img\n              id=\"imagen-carrito\"\n              alt=\"Carrito Imagen\"\n              src=\"assets/images/carrito.png\"\n          /></a>\n          <span\n            style=\"color: white; background: green\"\n            id=\"contador_carrito\"\n            class=\"badge bg-primary rounded-pill\"\n            >{{ contadorCarrito.length }}</span\n          >\n          <!--Array que funciona en los todos los productos Components -->\n        </div>\n        <div class=\"col\" id=\"cerrar\">\n          <a id=\"cerrarSesion\" class=\"navbar-brand\" href=\"#\">Cerrar sesión</a>\n          <br>\n          <div id=\"usuarioSign\"><i>{{usuario}}</i></div>\n        </div>      \n      </div>\n    </li>\n  </ul>\n</nav>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from 'src/app/services/firebase.service';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css'],\n})\nexport class NavBarComponent implements OnInit {\n  constructor(\n    public serviciosProductos: ProductosServicesService,\n    public firebase: FirebaseService\n  ) {\n    this.contadorCarrito = this.serviciosProductos.getListaCarrito();\n  }\n  usuario: string;\n  bandera: boolean = false;\n\n  contadorCarrito: any[] = [];\n\n  ngOnInit(): void {\n    \n    this.contadorCarrito = this.serviciosProductos.getListaCarrito(); //sirve para el contador debajo del carrito que coge la lista con el getter porque ya hicimos setter desde los componentes de productos\n    this.bandera = this.firebase.getFlag(); //ESTO ES PARA EL LOGIN SI ESTA TRUE SE MUESTRA AGREGAR PRODUCTOS Y SI ESTA EN FALSE SE ESCONDE\n    this.usuario = this.firebase.getUsuario();\n  }\n}\n","<div class=\"row\">\n  <h2 id=\"cabecera\">Seleccione el producto que va a registrar</h2>\n  <div class=\"col\"></div>\n  <div class=\"col\" id=\"spinner\">\n    <select [(ngModel)]=\"seleccion\" class=\"form-select\">\n      <!--Creacion del select junto al NGMODEL que le asignamos la variable seleccion creada en el TS para saber el valor del <option>-->\n      <option *ngFor=\"let item of datos\">\n        <!-- Recorremos la variable datos creada en el TS con todos los valores de los productos para que se creen tantos <option> como valores tenga \"DATOS\"-->\n        {{ item }}\n      </option>\n    </select>\n  </div>\n  <div class=\"col\"></div>\n</div>\n\n<div id=\"blanco\" *ngIf=\"seleccion == datos[0]\">\n  <!--Aqui hacemos un if que si seleccion tiene valor de datos[0](consola,dato sacado del array por la posicion en el que se encuentran)\n  se iniciara todo el formulario enfocado a consola y asi con el resto de productos -->\n<div class=\"row\" >\n    <div class=\"col\">\n      <h3>Introduzca nombre <label id=\"label\">*</label></h3>\n      <input [(ngModel)]=\"nombre\" type=\"text\" value=\" \" />\n      <!--Este ngModel es una variable que cogera el valor del input para añadirlo a la creacion del objeto consola o el que sea-->\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca URL de imagen</h3>\n      <input type=\"text\" [(ngModel)]=\"imagen\" value=\" \" />\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca descripcion del producto <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"descripcion\" value=\" \" />\n    </div>\n    \n</div>\n<div class=\"row\">\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca el precio <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"precio\" (keypress)=\"numberOnly($event)\" />\n    </div>\n    <div class=\"col\"></div>\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca la capacidad de almacenamiento <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"capacidad\" (keypress)=\"numberOnly($event)\" />\n    </div>  \n  </div>\n  <button id=\"botonAgregar\" class=\"btn btn-primary\" (click)=\"anadirConsola()\">\n    Agregar producto\n  </button>\n  <!--Boton con funcionalidad explicada en el ts -->\n</div>\n<div id=\"blanco\" *ngIf=\"seleccion == datos[1]\">\n  <!--Aqui hacemos un if que si seleccion tiene valor de datos[0](consola,dato sacado del array por la posicion en el que se encuentran)\n  se iniciara todo el formulario enfocado a consola y asi con el resto de productos -->\n<div class=\"row\" >\n    <div class=\"col\">\n      <h3>Introduzca nombre <label id=\"label\">*</label></h3>\n      <input [(ngModel)]=\"nombre\" type=\"text\" value=\" \"  />\n      <!--Este ngModel es una variable que cogera el valor del input para añadirlo a la creacion del objeto consola o el que sea-->\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca URL de imagen</h3>\n      <input type=\"text\" [(ngModel)]=\"imagen\" value=\" \" />\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca descripcion del producto <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"descripcion\" value=\" \" />\n    </div>\n    </div>\n    <div class=\"row\">\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca el precio <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"precio\"   (keypress)=\"numberOnly($event)\"/>\n    </div>\n    <div class=\"col\">\n\n    </div>\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca el tiempo medio de juego <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"tiempoJuego\"  (keypress)=\"numberOnly($event)\"/>\n    </div>\n  </div>\n  <button id=\"botonAgregar\" class=\"btn btn-primary\" (click)=\"agregarVideojuego()\">\n    Agregar producto\n  </button>\n  <!--Boton con funcionalidad explicada en el ts -->\n</div>\n<div id=\"blanco\" *ngIf=\"seleccion == datos[2]\">\n  <!--Aqui hacemos un if que si seleccion tiene valor de datos[0](consola,dato sacado del array por la posicion en el que se encuentran)\n   se iniciara todo el formulario enfocado a consola y asi con el resto de productos -->\n<div class=\"row\" >\n    <div class=\"col\">\n      <h3>Introduzca nombre <label id=\"label\">*</label></h3>\n      <input [(ngModel)]=\"nombre\" type=\"text\" />\n      <!--Este ngModel es una variable que cogera el valor del input para añadirlo a la creacion del objeto consola o el que sea-->\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca URL de imagen</h3>\n      <input type=\"text\" [(ngModel)]=\"imagen\" />\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca descripcion del producto <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"descripcion\" />\n    </div>\n    </div>\n    <div class=\"row\">\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca el precio <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"precio\"  (keypress)=\"numberOnly($event)\" />\n    </div>\n  </div>\n  <button id=\"botonAgregar\" class=\"btn btn-primary\" (click)=\"agregarPeriferico()\">\n    Agregar producto\n  </button>\n<!--Boton con funcionalidad explicada en el ts -->\n</div>\n<div id=\"blanco\" *ngIf=\"seleccion == datos[3]\">\n\n<!--Aqui hacemos un if que si seleccion tiene valor de datos[0](consola,dato sacado del array por la posicion en el que se encuentran)\nse iniciara todo el formulario enfocado a consola y asi con el resto de productos -->\n\n<div class=\"row\" >\n    <div class=\"col\">\n      <h3>Introduzca nombre <label id=\"label\">*</label></h3>\n      <input [(ngModel)]=\"nombre\" type=\"text\" />\n<!--Este ngModel es una variable que cogera el valor del input para añadirlo a la creacion del objeto consola o el que sea-->\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca URL de imagen</h3>\n      <input type=\"text\" [(ngModel)]=\"imagen\" />\n    </div>\n    <div class=\"col\">\n      <h3>Introduzca descripcion del producto <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"descripcion\" />\n    </div>\n    </div>\n    <div class=\"row\">\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca el precio <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"precio\"  (keypress)=\"numberOnly($event)\" />\n    </div>\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca la capacidad de almacenamiento <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"capacidad\"  (keypress)=\"numberOnly($event)\" />\n    </div>\n    <div class=\"col\" id=\"marginTop\">\n      <h3>Introduzca los pixeles del movil <label id=\"label\">*</label></h3>\n      <input type=\"text\" [(ngModel)]=\"pixeles\"  (keypress)=\"numberOnly($event)\" />\n    </div>\n  </div>\n  <button id=\"botonAgregar\" class=\"btn btn-primary\" (click)=\"agregarMovil()\">\n    Agregar producto\n  </button>\n  <!--Boton con funcionalidad explicada en el ts -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { Periferico } from 'src/assets/utils/Periferico';\nimport { Consola } from 'src/assets/utils/Consola';\nimport { Videojuego } from 'src/assets/utils/Videojuego';\nimport { Movil } from 'src/assets/utils/Movil';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n@Component({\n  selector: 'app-anadir-productos-components',\n  templateUrl: './anadir-productos-components.component.html',\n  styleUrls: ['./anadir-productos-components.component.css'],\n})\nexport class AnadirProductosComponentsComponent implements OnInit {\n\n// objeto que se añadira a la base de datos //\n\n  consolametidabda:Consola; \n  videojuegometidabda:Videojuego;   \n  perifericometidabda:Periferico;\n  movilemetidabda:Movil; \n\n   //INICIO VARIABLES COMUNES//\n   nombre: string = '';\n   imagen: string = ''; \n   descripcion: string = '';\n   precio: number = 0;\n   capacidad: number = 0;\n   //FIN VARIABLES COMUNES//\n\n   //INICIO VARIABLES ESPECIFICAS VIDEOJUEGOS//\n   tiempoJuego: number = 0;\n   //FIN VARIABLES ESPECIFICAS VIDEOJUEGOS//\n\n   //INICIO VARIABLES ESPECIFICAS MOVILES//\n   pixeles:number;\n   //FIN VARIABLES ESPECIFICAS MOVILES//\n\n  listaConsolasTotal: Consola[] = [];\n  listaMovilesTotal: Movil[] = [];\n  listaPerifericosTotal: Periferico[] = [];\n  listaVideojuegosTotal: Videojuego[] = [];\n\n  datos; //contendrá todos los distintos productos\n  seleccion: string = '0'; //variable que se encarga de saber que <select> hemos escogido\n\n  constructor(public servicioProductos: ProductosServicesService,private bda:AngularFireDatabase) {\n    this.datos = ['Consolas', 'Videojuegos', 'Perifericos', 'Moviles']; //inicializacion de variable datos con los respectivos datos que en el HTML se recorrera para hacer tantos <select><option> sean necesarios\n  }\n\n  ngOnInit(): void {}   \n\n  anadirConsola() {  \n     /*\n    Aqui lo que hacemos es:\n    1ºcogemos la lista consola creada al principio de la clase\n    2ºla lista creada la igualamos al servicio es decir al total(por ahora igual que con los cards)\n    3ºcoges la lista total ya implementada y le metes el producto qe se crea justo arriba de este\n     comentario recogiendo el valor de todos los inputs y colocandolos en sus respectivos huecos\n    4ºUna vez la lista con todo MAS el producto que se PUSHEA cuando has pulsado el boton coges el SETTER\n      creado en el SERVICIO y lo seteas a la lista de ahora mismo que se ha actualizado con el nuevo elemento\n    */\n    if (\n      this.nombre.length == 0 ||\n      this.descripcion.length == 0 ||\n      this.precio == 0 ||\n      this.capacidad == 0\n    ) {\n     alert(\"Faltan campos obligatorios por rellenar\")\n    } else {\n      this.consolametidabda = {\n        nombre: this.nombre,\n        imagen: this.imagen,\n        descripcion: this.descripcion, //creacion del objeto con las variables que tendran el valor de los inputs\n        precio: this.precio,\n        capacidad: this.capacidad,\n        id:0,\n        tipo:\"consola\"\n      }; \n\n    const tablaConsola = this.bda.list('Productos');\n    tablaConsola.push(this.consolametidabda)\n\n    this.listaConsolasTotal = this.servicioProductos.getListaConsola();\n    this.listaConsolasTotal.push(this.consolametidabda);\n    this.servicioProductos.setlistaConsolas = this.listaConsolasTotal;   \n  }     \n    }\n  agregarVideojuego() {\n    if (\n      this.nombre.length == 0 ||\n      this.descripcion.length == 0 ||\n      this.precio == 0 ||\n      this.tiempoJuego == 0\n    ) {\n      alert(\"Faltan campos obligatorios por rellenar\")\n    } else {\n      this.videojuegometidabda = {\n        nombre: this.nombre,\n        descripcion: this.descripcion,\n        imagen: this.imagen,\n        precio: this.precio,\n        tiempodejuego: this.tiempoJuego,\n        tipo:'videojuego',\n        id:0\n      };\n      const tablaConsola = this.bda.list('Productos');\n      tablaConsola.push(this.videojuegometidabda)\n\n      this.listaVideojuegosTotal = this.servicioProductos.getListaVideojuegos();\n      this.listaVideojuegosTotal.push(this.videojuegometidabda);\n      this.servicioProductos.setListaVideojuegos = this.listaVideojuegosTotal;\n    }\n  }\n  agregarMovil() {\n    if (\n      this.nombre.length == 0 ||\n      this.descripcion.length == 0 ||\n      this.precio == 0 ||\n      this.capacidad == 0 ||\n      this.pixeles == 0\n    ) {\n      alert(\"Faltan campos obligatorios por rellenar\")\n    } else {\n      this.movilemetidabda = {\n        nombre: this.nombre,\n        imagen: this.imagen,\n        precio: this.precio,\n        descripcion: this.descripcion,\n        capacidad: this.capacidad,\n        id:0,\n        tipo:\"movil\",\n        pixeles:1\n      };\n\n      const tablaConsola = this.bda.list('Productos');\n      tablaConsola.push(this.movilemetidabda)\n\n      this.listaMovilesTotal = this.servicioProductos.getListaMoviles();\n      this.listaMovilesTotal.push(this.movilemetidabda);\n      this.servicioProductos.setListaMoviles = this.listaMovilesTotal;\n    }\n  }\n  agregarPeriferico() {\n    if (\n      this.nombre.length == 0 ||\n      this.descripcion.length == 0 ||\n      this.precio == 0 \n      //this.cantidad == 0 ||\n    ) {\n      alert(\"Faltan campos obligatorios por rellenar\")\n    } else {\n      this.perifericometidabda = {\n        nombre: this.nombre,\n        imagen: this.imagen,\n        descripcion: this.descripcion,\n        precio: this.precio,\n        id:0,\n        tipo:'periferico'\n      };     \n      const tablaConsola = this.bda.list('Productos');\n      tablaConsola.push(this.perifericometidabda)\n\n      this.listaPerifericosTotal = this.servicioProductos.getListaPerifericos();\n      this.listaPerifericosTotal.push(this.perifericometidabda);\n      this.servicioProductos.setListaPerifericos = this.listaPerifericosTotal;\n    }\n  }\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div class=\"row\" id=\"filtrarVidejuegos\">\n  <div class=\"col\"></div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Nombre</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el nombre de la consola\" #inputNombre>\n  </div>\n  <div class=\"col\">\n    <p id=\"centrarInput\">Introduzca Precio</p>  \n<input type=\"text\" class=\"form-control position-relative\"  placeholder=\"Introduce el precio de la consola\" #inputPrecio>\n  </div>\n <div class=\"col\">\n   <button class=\"btn btn-primary\" id=\"botonFiltrar\" (click)=\"filtrarConsola(inputNombre.value,inputPrecio.value)\">Buscar</button>\n  </div>\n</div>\n  <div [ngSwitch]=\"listaFiltradaConsola.length\">\n    <div *ngSwitchCase=\"0\">\n      <div class=\"alert alert-secondary\" id=\"alertNohay\" role=\"alert\">\n       No hay consolas\n      </div>\n    </div>\n    <div *ngSwitchDefault>     \n      <div class=\"row\" id=\"rowVideojuegos\">\n      <div class=\"col\" *ngFor=\"let item of listaFiltradaConsola\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <img [src]=\"item.imagen|imagenesPipes\" class=\"card-img-top\" alt=\"imagen_vegetal\"\n          style=\"height: 18rem; width: 18rem;\">\n            <ul class=\"list-group list-group-flush\">\n            <h3 class=\"card-title\" id=\"nombrePro\">{{item.nombre}}</h3>\n            </ul>\n            <ul>\n            <h3 class=\"card-text\" id=\"descripcionPro\" >{{item.descripcion}}</h3>\n          </ul>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Capacidad: {{item.capacidad}}GB</h4></li>\n          </ul>  \n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\" id=\"precioPro\"><h4>Precio: {{item.precio}}€</h4></li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-primary\" style=\"width: 250px;height: 46px;\" (click)=\"agregarCarrito(item.nombre)\">Agregar carrito</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { FirebaseService } from 'src/app/services/firebase.service';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport { Consola } from 'src/assets/utils/Consola';\n\n@Component({\n  selector: 'app-consolas',\n  templateUrl: './consolas.component.html',\n  styleUrls: ['./consolas.component.css'],\n})\nexport class ConsolasComponent implements OnInit {\n  \n  consola:Observable<any[]> | undefined; //observable donde iran todos los elementos de la base de datos\n  listaConsolas: Consola[]; //array donde se rellena con los objetos que tiene el observable consola\n\n  identificador:number;\n  constructor(\n    public serviciosProductos: ProductosServicesService,\n    private toastSvc: ToastrService,\n    private bda:AngularFireDatabase\n  ) {\n    this.identificador = 0\n  }\n\n  listaNuevaPrueba: any[] = [];\n  listaCarritoNombre: any[] = [];\n  consolaSelected:Consola;\n  listaFiltradaConsola:Consola[];\n\n  ngOnInit(): void {\n    var i = 0; // variable usada para hacer un ++ tantas veces como elementos en la base de datos haya y se inicializa a 0 cada vez quye salimos porque sino se repite y se añadirian otrea vez los mismos elementos x2 y con esto lo controlamos \n    this.consola = this.bda.list('Productos').valueChanges();  \n    this.consola.forEach(element => {\n      element.forEach(x => { \n        if (x.tipo == \"consola\") {\n          i++;\n        }          \n        if (this.listaConsolas.length < i && x.tipo == \"consola\") {\n          this.listaConsolas.push(x);   \n        }    \n      });\n    });\n    this.consolaSelected={\n      nombre: \"\",\n      imagen:\"\",\n      descripcion: \"\",\n      precio: 0,\n      capacidad:0,\n      id:0,\n      tipo:\"consola\"\n    }\n    this.identificador = this.serviciosProductos.getIdentificador();\n    this.listaConsolas = this.serviciosProductos.getListaConsola();\n    this.listaCarritoNombre = this.serviciosProductos.getListaCarrito();\n  }\n  agregarCarrito(nombre: string) {\n    this.listaCarritoNombre.push(nombre);\n    this.listaConsolas.forEach((objetoC) => {\n      if (objetoC.nombre == nombre) {\n        this.consolaSelected={\n          nombre: objetoC.nombre,\n          imagen: objetoC.imagen,\n          descripcion: objetoC.descripcion,\n          precio: objetoC.precio,\n          capacidad:objetoC.capacidad,\n          id:this.identificador,\n          tipo:objetoC.tipo\n        }\n        this.identificador++;\n        this.listaNuevaPrueba.push(this.consolaSelected);\n      }\n    });\n    this.serviciosProductos.setIdentificador = this.identificador;\n    this.serviciosProductos.setListaNuevaPrueba = this.listaNuevaPrueba;\n    this.toastSvc.success('Has añadido:' + nombre);\n    this.listaNuevaPrueba = [];\n  }\n\n  filtrarConsola(nombre:string,precio:number){\n    this.listaFiltradaConsola=[];\n    this.listaConsolas.forEach((consola)=>{\n      if (consola.nombre.toLocaleLowerCase().includes(nombre.toLocaleLowerCase())&&consola.precio.toString().includes(precio.toString())) {\n        this.listaFiltradaConsola.push(consola);\n      }\n    });\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as Mapboxgl from 'mapbox-gl';\nimport { ProductosServicesService } from 'src/app/services/productos-services.service';\nimport * as L from 'leaflet';\nimport { PeticionesApiService } from 'src/app/services/peticiones-api.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-carrito-components',\n  templateUrl: './carrito-components.component.html',\n  styleUrls: ['./carrito-components.component.css'],\n})\nexport class CarritoComponentsComponent implements OnInit {\n  //listaCarritoNombre: any[] = [];\n  listaNueva: any[]=[];\n  listaCarrito: any[]=[];\n  precioFinal: number = 0;\n  geojsonFeature:any;\n  marker:any\n\n  constructor(public servicioCarrito: ProductosServicesService,public apiMapa : PeticionesApiService,private gestorRutas: Router) {}\n\n  mapa: Mapboxgl.Map; //Creamos el mapa tipandolo como mapboxgl.map el mapboxgl es el nobmre que le damos en el import como en BDA y luego .Map para saber q es mapa porque accedemos a ese tipo\n  latLongFinal: Mapboxgl.LngLat; //Accedemos a la longitud y latitud\n  latLongFinalMostrar:any;\n  ngOnInit(): void {\n    this.geojsonFeature = {\n      type: 'FeatureCollection'\n      ,features:[]\n    };\n\n    (Mapboxgl as any).accessToken =\n      'pk.eyJ1IjoibmF4eG81NiIsImEiOiJja243ZGJudnYwbXVyMnJzNHo2NDZ5NDN4In0.dRV-g-m3PhwftDW3furTTw'; //Token que te lo da la pagina para poder usarlo\n    this.mapa = new Mapboxgl.Map({\n      container: 'mapa', //Aqui creamos el mapa ya bien bien y decimos el container(donde va a ir situado el mapa), el style que es el de la pagina, center que es cuando enciendas el mapa donde te situa\n      style: 'mapbox://styles/mapbox/streets-v11', //el zoom pues lo que significa zoom :d\n      center: [-3.74922, 40.463667],\n      zoom: 5,\n    });\n    //punto predeterminado al empezar, es un marcador que iremos moviendo\n    this.crearMarcador(-3.8321266502597666, 40.35191697150731);\n    this.mapa.addControl(new Mapboxgl.NavigationControl()); //implementa el acercar,alejar y rotar el mapa\n    this.mapa.addControl(new Mapboxgl.FullscreenControl()); //implementa el fullscreen\n    this.mapa.addControl(\n      new Mapboxgl.GeolocateControl({\n        //pulsas y te lleva a tu ubicacion\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true, //si hay un cambio lo detectara y se actualizara;\n      })\n    );\n\n    this.listaNueva = this.servicioCarrito.getListaNueva();\n    this.listaCarrito = this.servicioCarrito.getListaCarrito();\n    this.listaNueva.forEach((element) => {\n      //ESTO CALCULA EL PRECIO FINAL QUE HACE LA SUMA DE TODOS LOS PRECIOS Y SI LO HAGO POR SEPARADO LO HAGO CON LAS 5 LISTAS Y AU\n      element.forEach((elemento) => {\n        this.precioFinal += elemento.precio;\n      });\n    });  \n  }\n\n  crearMarcador(long: number, lat: number) {\n     this.marker = new Mapboxgl.Marker({\n      draggable: true, //El draggable lo que hace es que puedas REPOSICIONAR el MARKER si esta en TRUE\n      \n    })\n      .setLngLat([long, lat])\n      .addTo(this.mapa);\n      this.marker.on('drag', () => {\n      //Drag significa Fire while dragging que significa que siga mientras se dispara es decir mientras se arrastra\n      this.latLongFinal = this.marker.getLngLat(); //y con esta linea usamos la variable creada al principio para poner en que latitud/longitud dejamos el marker\n      this.servicioCarrito.setCoordenadas = this.latLongFinal;\n      \n      this.apiMapa.getLatLngMapa(this.marker.getLngLat().lng,this.marker.getLngLat().lat).subscribe((data:any)=>{\n        L.geoJSON(this.geojsonFeature).addTo(this.mapa)\n        this.latLongFinalMostrar = data.features[0].place_name;\n        this.servicioCarrito.setCoordenadas = this.latLongFinalMostrar;\n      })  \n    });\n  }\n  vacio(){\n    if(this.listaNueva.length==0){\n      alert(\"No tienes ningun producto agregado al carrito.\")\n    }else{\n      this.gestorRutas.navigate(['pagar']);\n    }\n  }\n  \n  eliminarProducto(identificador: number){\n    for (let index = 0; index < this.listaNueva.length; index++) {\n      const element = this.listaNueva[index];\n      for (let index2 = 0; index2 < element.length; index2++) {\n        const elementoEliminar = element[index2]; \n        if (elementoEliminar.id == identificador) {     \n          this.listaNueva.splice(index,1) \n          this.listaCarrito.splice(index,1)\n          this.precioFinal =this.precioFinal-elementoEliminar.precio;         \n        }        \n      }   \n    }\n    if (this.listaNueva.length == 0) {\n      this.precioFinal = 0;\n    }\n  }\n}\n","<div class=\"row\" id=\"total\">\n  <div id=\"colum1\" class=\"col\">\n    <div id=\"topmapa\">    \n      <b id=\"localizacion\"> Su localizacion es : {{ latLongFinalMostrar }} </b>\n    </div>\n    <div id=\"mapa\"></div>\n    <!--Este id lo que hace es identificar en que bloque va a estar situado el MAPA -->\n    <br />\n    <br />\n    <!--variable del TS explicada ahi-->\n  </div>\n  <div id=\"colum2\" class=\"col\">\n    <h2 id=\"resumenPedidoTexto\">\n      <u><b>Resumen del pedido:</b></u>\n    </h2>\n    <table id=\"resumenCarrito\" class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Nombre</th>\n          <th scope=\"col\">Precio</th>\n          <th scope=\"col\">Imagen del producto</th>\n        </tr>\n      </thead>\n      <tbody *ngFor=\"let item of listaNueva\">\n        <tr *ngFor=\"let itemF of item\">\n          <td>{{ itemF.nombre }}</td>\n          <td>{{ itemF.precio }} €</td>\n          <td>\n            <img [src]=\"itemF.imagen\" style=\"height: 10rem; width: 10rem\" />\n          </td>\n          <td>\n            <button\n              (click)=\"eliminarProducto(itemF.id)\"\n              id=\"eliminar\"\n              class=\"btn-danger\"\n            >\n              Eliminar producto\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <b id=\"textoFinal\">PrecioFinal:</b>\n    <b id=\"precioFinal\"> {{ precioFinal }}€</b>\n    <button\n      (click)=\"vacio()\"\n      class=\"btn btn-success\"\n      style=\"width: 42%\"\n      id=\"boton_pagar\"\n    >\n      Finalizar Compra\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AnadirProductosComponentsComponent } from './components/anadir-productos-components/anadir-productos-components.component';\nimport { CarritoComponentsComponent } from './components/carrito-components/carrito-components.component';\nimport { ConsolasComponent } from './components/consolas/consolas.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MovilesComponent } from './components/moviles/moviles.component';\nimport { PagarComponentsComponent } from './components/pagar-components/pagar-components.component';\nimport { PaginaInicialComponentsComponent } from './components/pagina-inicial-components/pagina-inicial-components.component';\nimport { PerifericosComponent } from './components/perifericos/perifericos.component';\nimport { VideojuegosComponent } from './components/videojuegos/videojuegos.component';\n\nconst routes: Routes = [\n  { path: 'home', component: PaginaInicialComponentsComponent },\n  { path: 'consolas', component: ConsolasComponent },\n  { path: 'videojuegos', component: VideojuegosComponent },\n  { path: 'anadir', component: AnadirProductosComponentsComponent },\n  { path: 'perifericos', component: PerifericosComponent },\n  { path: 'carrito', component: CarritoComponentsComponent },\n  { path: 'pagar', component: PagarComponentsComponent },\n  { path: 'moviles', component: MovilesComponent },\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PeticionesApiService {\n  \n  constructor(private http: HttpClient) {}\n\n  getLatLngMapa(lng,lat){\n    //return this.http.get(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\"+lng+\",\"+lat+\".json?access_token=pk.eyJ1IjoibmF4eG81NiIsImEiOiJja243ZGJudnYwbXVyMnJzNHo2NDZ5NDN4In0.dRV-g-m3PhwftDW3furTTw\");\n    return this.http.get(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\"+lng+\",\"+lat+\".json?access_token=pk.eyJ1IjoibmF4eG81NiIsImEiOiJja243ZGJudnYwbXVyMnJzNHo2NDZ5NDN4In0.dRV-g-m3PhwftDW3furTTw\").pipe(catchError(error=> of('no va por esto ----->'+error)));  \n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}